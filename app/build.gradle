apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.welo.savenovel"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName rootProject.devVersionNameVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
    repositories {
        maven { url "https://jitpack.io" }
    }

    def renameAPK = { finalApkNamePrefix ->

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${finalApkNamePrefix}${variant.versionName}-${"build#" + defaultConfig.versionCode}.apk"
            }
        }
    }

    renameAPK("SaveNovel_APP_Debug_V")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
dependencies {
    /*Room*/
    implementation 'androidx.room:room-runtime:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
    // RxJava support for Room (use 1.1.0-alpha3 for latest alpha)
    implementation 'androidx.room:room-rxjava2:2.0.0'
}

dependencies {
    //Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
}
dependencies {
    //UI Component
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation('com.github.bumptech.glide:glide:4.7.1') {
        exclude group: "com.android.support"
    }
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.1'
    /*Log*/
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'com.jakewharton.timber:timber:4.5.1'

    /*Permission*/
    implementation 'pub.devrel:easypermissions:1.1.1'

    /* navigation */
    implementation 'androidx.navigation:navigation-fragment:2.0.0-rc02'
    implementation 'androidx.navigation:navigation-ui:2.0.0-rc02'

    //parse url
    implementation 'org.jsoup:jsoup:1.11.3'

    //folder chooser
    implementation 'com.github.codekidX:storage-chooser:2.0.4.4'

    //FloatWindow
    implementation 'com.github.yhaolpz:FloatWindow:1.0.9'


}

dependencies {

    implementation 'com.auth0:java-jwt:3.8.1'

    api 'io.jsonwebtoken:jjwt-api:0.10.7'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.10.7'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.10.7') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
    // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
    //runtimeOnly 'org.bouncycastle:bcprov-jdk15on:1.60'
}

dependencies {
    // Auto Value
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.8.0'
    implementation 'com.ryanharter.auto.value:auto-value-gson-annotations:0.8.0'
    implementation "com.google.auto.value:auto-value-annotations:1.6.2"
    annotationProcessor "com.google.auto.value:auto-value:1.6.2"
}
dependencies {
    def lifecycle_version = "1.1.1"

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    // alternatively - just ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0' // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata:2.0.0'
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'

    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0' // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'

    // optional - ReactiveStreams support for LiveData
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'

    // optional - Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.0.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'org.jetbrains:annotations:15.0'
}